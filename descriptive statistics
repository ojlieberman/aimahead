# Basic summary
summary(measurement_data_first_hour$n_measurements_first_hour)

# Additional stats
mean_val <- mean(measurement_data_first_hour$n_measurements_first_hour, na.rm = TRUE)
median_val <- median(measurement_data_first_hour$n_measurements_first_hour, na.rm = TRUE)
sd_val <- sd(measurement_data_first_hour$n_measurements_first_hour, na.rm = TRUE)
iqr_val <- IQR(measurement_data_first_hour$n_measurements_first_hour, na.rm = TRUE)
min_val <- min(measurement_data_first_hour$n_measurements_first_hour, na.rm = TRUE)
max_val <- max(measurement_data_first_hour$n_measurements_first_hour, na.rm = TRUE)

# Display nicely
cat("Descriptive Stats for Measurements in First ICU Hour:\n")
cat("Mean:   ", round(mean_val, 2), "\n")
cat("Median: ", median_val, "\n")
cat("SD:     ", round(sd_val, 2), "\n")
cat("IQR:    ", iqr_val, "\n")
cat("Min:    ", min_val, "\n")
cat("Max:    ", max_val, "\n")

# number of unique patients
length(unique(measurement_data_first_hour$person_id))

#to count patients with zero measurements in the first hour of their first ICU stay, we’ll need to:
#Get all patients with a first contiguous ICU stay (whether or not they have measurements).
#Left join that to the measurement_counts to capture zeros.
#Full R + PostgreSQL Query to Include Zero-Count Patients

library(DBI)

query <- "
WITH icu_visits AS (
  SELECT 
    person_id,
    visit_detail_id,
    visit_detail_start_datetime AS start_time,
    visit_detail_end_datetime AS end_time
  FROM omopcdm.visit_detail
  WHERE visit_detail_concept_id IN (
    32037, 2072499998, 40481392, 4305366, 
    763903, 2072499999, 4149943, 2072499989, 281379
  )
),
joined_visits AS (
  SELECT *,
         LAG(end_time) OVER (PARTITION BY person_id ORDER BY start_time) AS prev_end_time
  FROM icu_visits
),
chained_visits AS (
  SELECT *,
         CASE 
           WHEN prev_end_time = start_time THEN 0 ELSE 1
         END AS chain_break
  FROM joined_visits
),
grouped_visits AS (
  SELECT *,
         SUM(chain_break) OVER (
           PARTITION BY person_id 
           ORDER BY start_time 
           ROWS UNBOUNDED PRECEDING
         ) AS group_id
  FROM chained_visits
),
merged_intervals AS (
  SELECT 
    person_id,
    MIN(start_time) AS icu_start
  FROM grouped_visits
  GROUP BY person_id, group_id
),
first_icu_per_patient AS (
  SELECT DISTINCT ON (person_id) person_id, icu_start
  FROM merged_intervals
  ORDER BY person_id, icu_start
),
measurement_counts AS (
  SELECT 
    m.person_id,
    COUNT(*) AS n_measurements_first_hour
  FROM omopcdm.measurement m
  JOIN first_icu_per_patient i 
    ON m.person_id = i.person_id
  WHERE m.measurement_concept_id = 40762499
    AND m.measurement_datetime BETWEEN i.icu_start AND (i.icu_start + INTERVAL '1 hour')
  GROUP BY m.person_id
)

-- LEFT JOIN to get patients with 0 measurements
SELECT 
  f.person_id,
  f.icu_start,
  COALESCE(m.n_measurements_first_hour, 0) AS n_measurements_first_hour
FROM first_icu_per_patient f
LEFT JOIN measurement_counts m ON f.person_id = m.person_id;
"
# Run the query
measurement_data_with_zeros <- dbGetQuery(con, query)

# R: Count Patients with 0 and ≥1 Measurements
library(dplyr)

measurement_data_with_zeros %>%
  summarise(
    total_patients = n(),
    with_measurements = sum(n_measurements_first_hour > 0),
    without_measurements = sum(n_measurements_first_hour == 0)
  )


